


・外部キー
他の表の主キーを参照する列（組み合わせ）。外部キーの列に格納できる値は参照先の列に格納されている値のみに制限される。


・各分類に含まれる文

DML(manipulation)：データ操作言語
・select
・insert
・update
・delete
・merge

DDL(Definition)：データ定義言語
・create
・alter
・drop
・rename
・truncate
・comment

DCL(Control)：データ制御言語
・grant
・revoke

トランザクション制御
・commit
・rollback
・savepoint


NULL値を含む算術式は計算結果もNULL値になる

ASの後ろに小文字、特殊文字（#,$）を含めるときは""（ダブルクォーテーション）で囲む。囲まないとすべて大文字になる

リテラル（定数値）とは固定の文字列や日付、数値。


引用符デリミタの使い方
デリミタとしては、
任意のシングルバイト文字やダブルバイト文字
[ ]、{ }、( )、< >の各組合せ
select yomi || q'['s Salary : ]' || sal AS "Monthly Salary"

Monthly Salary
-------------------
sato's Salary : 500000

文字式の中にリテラルを使う場合は''(シングルクォーテーション)で囲む。数値リテラルは囲う必要はない。

LIKE演算子
_(アンダースコア)は任意の１文字と一致する


ESCAPEオプション
100%果汁ジュースに絞りたい場合
where pname like '100\%%' escape '\';

NOT演算子
where not sal < 30000

演算子の優先順位
NOT ＞　AND　＞　OR

where 1 = 1
or A = B
and C = D

orとin演算子のパフォーマンスは変わらない

order by
nullは一番大きい値として扱われる
NULL FIRST、NULL LASTでNULLの順番を制御する

行数を制御する
OFFSET 5 ROWS //最初の５行を飛ばす
FETCH FIRST 3 ROWS ONLY // ３行だけを取り出す

OFFSETには％キーワードは指定できない

置換変数
&
where deptno = &deptno
コマンドラインからdeptnoの入力が求められる
&&
コマンドラインから１回のみ入力が求められ、同じSQLを発行したら最初に入力した値が入る。最後入力を求められない。


単一行関数とグループ関数
単一行関数・・・入力データごとに結果を１つ戻る
グループ関数・・・複数県の入力データをグループ化した結果を１つだけ戻す

SUBSTR関数
select SUBSTR('Oracle Server', 2, 3)
⇒rac
select SUBSTR('Oracle Server', 2)
⇒racle Server

INSTR関数：
指定した文字パターンが現れる位置を戻す。無ければ0
select INSTR('Oracle Server','er', 1, 2)
⇒12
1文字目から'er'を探して２回目の'er' がある場所を返す。

LPAD関数：
select LPAD(yomi, 10, '*') 
⇒********sa

ADD_MONTH関数
月の最終日とそれ以外で違うので注意
select ADD_MONTH('14-02-28', 1)
⇒14-03-31
select ADD_MONTH('14-02-27', 1)
⇒14-03-27

NEXT_DAY関数
select NEXT_DAY('14-01-24', '日曜日')
⇒14-01-26

LAST_DAY関数
select LAST_DAY('12-02-01')
⇒12-02-29

ROUND関数とTRUNC関数は日付でもOK
ROUND(SYSDATE, 'YEAR')
TRUNC(SYSDATE, 'YEAR')
TRUNC(SYSDATE, 'MONTH')
TRUNC(SYSDATE, 'DD')
⇒defaultはDD


ーーー５章(データ型の変換と変換関数)ーーー

TO_CHAR関数
TO_DATE関数
TO_NUMBER関数

TO_CHAR関数
select TO_CHAR(SYSDATE, 'YYYY"年"MM"月"DD"日"'(DAY)')
⇒2014年01月24日(金曜日)

NULLIF関数
NULLIF(式1, 式2)
⇒if(式1 = 式2){
 return null
} else {
 return 式1
}

coalesce関数
coalesce(null, null, 3, 4)
⇒4


DECODE関数
select DECODE(
deptno, 10, sal * 1.1
      , 20, sal * 1.2
      , sal * 1.5)

・TO_CHAR関数は、引数に指定された値が数値書式の桁数を超えていると「#」を表示する。
select TO_CHAR(123456.78, '99,999') FROM dual;
⇒#######

・日付書式にRR要素を指定すると、受け入れた値が現在の年に近い世紀として扱われる。
現在日付：2014年7月26日
select TO_CHAR(TO_DATE('07-26-95','MM-DD-RR'),'YYYY-MM-DD'),
select TO_CHAR(TO_DATE('07-26-45','MM-DD-RR'),'YYYY-MM-DD')
⇒1995-07-26
⇒2045-07-26

・FM要素の指定
FM要素を指定して「埋込みモード」を無効にすると、数値の先行0や文字値の前後に含まれれるスペースが取り除かれる。
select to_char(sysdate, 'fmddth' "of" Month, YYYY')
⇒16th of May, 2020
select to_char(sysdate, 'fmddth' "of" fmMonth, YYYY')
⇒16th of May , 2020

・英語の日付書式
select TO_CHAR(sysdate, 'fmDdspth' "of" Month, YYYY') from dual;
⇒Twenty-Sixth of May,2014

・TO_CHAR関数は桁数の先頭に0を指定すると、先行0を表示する。
select TO_CHAR(1111, '099,9999') from dual;
⇒000,1111

・NVL2関数は、引数の「式１」に指定された値がNULL値以外の場合は式２を、NULL値の場合は式３を戻す
select NVL2(ボーナス, 年収＋ボーナス, 年収)

・曜日を表示する日付書式
DAY：月曜日
DY ：月
D  ：2

・NULLIF関数
NULLIF(式１、式２)
式１、２が異なる場合は式１を戻す。
式１にはNULL値を指定できません。


ーーー６章(グループ関数（複数行関数）)ーーー

・グループ関数の基本構文
select(distinct | ALL(規定値) {列名 | 式})
distinctを指定することで重複行を省略できる。

・グループ関数のNULL値の扱い
グループ関数はNULLを無視して集計処理を行う
count(*)の場合だけnull値も含む

・グループ関数のネスト
2レベルまでネスト可能、3レベル以上はエラー
max(svg(a))

・グループ関数の注意
　group by句には、列別名は指定できない。
 
・order by句には列別名およびselect句無いの位置を指定できるが、group by句には列別名およびselect句内の位置は指定できない
正
order by 1
→１番目のカラムの順番


・selectの各句の指定順序
select
from
where
group by
having
order by
group by句とhavig句の順番は入れ替えられる

・LISTAGG関数
select deptno, avg(sal),
       LISTAGG(ename, ':') within group (order by sal desc) member_list
from employees

⇒10 325000 佐藤：中：佐々木


ーーー7章(複数の表からのデータの取り出し)ーーー

・「(+)」（外部結合演算子）
where句の条件の左側に付けると右側外部結合、右側に付けると左側外部結合

where 表１（＋）　＝　表２

FROM句で表に表別名を指定した場合は、SELECT文全体で表別名を指定する必要がある



ーーー８章(単一行副問い合わせと複数行副問い合わせ)ーーー

・副問い合わせの中にnullがあるときの注意点
where mgr not in (select mgr from employees)
not inにnullがあると結果は0件になる

・副問い合わせが単一行か複数行か
select * from sample1
where deptno = (select deptno from sample2)
→副問い合わせが複数行のときはエラーになる

ーーー９章(集合演算子の使用方法)ーーー

・UNION演算子
内部的にデータをソートして重複行を削除するため、実行結果もSELECT句の先頭に指定されている列の値で昇順にソートされる。

・UNIONALL演算子
内部でソート処理を行わない。１つ目の問い合わせの結果の後ろに２つ目の問い合わせの結果を追加する。

・INTERSECT演算子
重複は削除される。
内部でソート処理を行う。実行結果もSELECT句の先頭に指定されている列の値で昇順にソートされる。

・MINUS演算子
重複は削除される。
内部でソート処理を行う。実行結果もSELECT句の先頭に指定されている列の値で昇順にソートされる。

・集合演算子でのorder by
ORDER BY句は副問い合わせの最後の問い合わせに指定する
ORDER BY句には、最初の問い合わせのSELECT句に指定されている列または列別名を指定する(列別名が指定されているときは列名はエラー)

・集合演算子の優先順位は全て同じなので、通常は優先順位は上から順になる。

・order by句での列名のダブルクオーテーション
ORDERBY句でダブルクオーテーションを付けると大文字・小文字が区別される
order by "Promotion Name"








